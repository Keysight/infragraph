paths:
  /set_graph:
    post:
      tags: ['Configuration']
      operationId: set_graph
      x-stream: client
      description: >-
        Given an infrastructure object this API method will create a fully qualified infrastructure graph and validate it.


        Creating a fully qualified infrastructure graph requires the following steps:
          - process each of the infrastructure instance objects by locating the device and creating a subgraph using the device's edges and substituting the instance name for the device name.
          - process each of the infrastructure edges, looking up the instance to determine the max count and the name to be substituted for the device and link the subgraphs to create a complete infrastructure graph
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../models/infrastructure.yaml#/components/schemas/Infrastructure'
      responses:
        '200':
          $ref: '../models/request.yaml#/components/responses/Success'
          x-field-uid: 1
        default:
          $ref: '../models/request.yaml#/components/responses/Failure'
          x-field-uid: 2
  /get_graph:
    post:
      tags: ['Configuration']
      operationId: get_graph
      x-stream: client
      description: >-
        This will return the current graph.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../models/graph.yaml#/components/schemas/GraphRequest'
      responses:
        '200':
          $ref: '../models/graph.yaml#/components/responses/GraphResponse'
          x-field-uid: 1
        default:
          $ref: '../models/request.yaml#/components/responses/Failure'
          x-field-uid: 2
  /query_graph:
    post:
      tags: ['Actions']
      operationId: query_graph
      x-stream: client
      description: >-
        Query the current fully expanded graph using a declarative query syntax.

          - example: Ask the graph for specific endpoints such as those of type `NPU` or `NIC`
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../models/graph.yaml#/components/schemas/QueryRequest'
      responses:
        '200':
          $ref: '../models/graph.yaml#/components/responses/QueryResponse'
          x-field-uid: 1
        default:
          $ref: '../models/request.yaml#/components/responses/Failure'
          x-field-uid: 2
  /annotate_graph:
    post:
      tags: ['Configuration']
      operationId: annotate_graph
      x-stream: client
      description: >-
        Extend the current graph created by the `set_graph` API.

          - example: Update specific endpoints with name/value information such as `rank=0`
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../models/graph.yaml#/components/schemas/AnnotateRequest'
      responses:
        '200':
          $ref: '../models/request.yaml#/components/responses/Success'
          x-field-uid: 1
        default:
          $ref: '../models/request.yaml#/components/responses/Failure'
          x-field-uid: 2