components:
  schemas:
    Device.Endpoint:
      type: object
      required:
        - component
      properties:
        device:
          description: |-
            An optional name of a device that contains the component.
            If the property is empty the name of the device is the parent of the edge object.
          type: string
          pattern: (.+?)\[(\d*):?(\d*):?(\d*)\]
          x-field-uid: 1
        component:
          description: |-
            The name of a component that exists in the containing device.
          type: string
          pattern: (.+?)\[(\d*):(\d*):?(\d*)\]
          x-field-uid: 2
    Infrastructure.Endpoint:
      type: object
      required:
        - device
        - component
      properties:
        device:
          description: |-
            The name of a device that contains the component and MUST exist
            in the infrastructure devices.
          type: string
          pattern: (.+?)\[(\d*):(\d*):?(\d*)\]
          x-field-uid: 1
        component:
          description: |-
            The name of a component that MUST exist in the containing device.
          type: string
          pattern: (.+?)\[(\d*):(\d*):?(\d*)\]
          x-field-uid: 2
    Infrastructure.Edge:
      type: object
      required:
        - ep1
        - ep2
        - many2many
        - link
      properties:
        ep1:
          description: |-
            A device and component that is one endpoint of the edge
          $ref: "#/components/schemas/Infrastructure.Endpoint"
          x-field-uid: 1
        ep2:
          description: |-
            A device and component that is the other endpoint of the edge
          required:
            - device
            - component
          $ref: "#/components/schemas/Infrastructure.Endpoint"
          x-field-uid: 2
        many2many:
          description: |-
            If true every endpoint from ep1 will form an edge with every endpoint from ep2.
            If false endpoints generated from ep1 and ep2 should be of the same length and
            will be assigned together in the order they appear in each list.
          type: boolean
          x-field-uid: 3
        link:
          description: |-
            The name of a link that defines additional characteristics of the edge.
            The name MUST exist in the links array of the infrastructure.
          type: string
          x-field-uid: 4
    Device.Edge:
      type: object
      required:
        - ep1
        - ep2
        - many2many
        - link
      properties:
        ep1:
          description: |-
            An optional device and component that is the other endpoint of the edge
          $ref: "#/components/schemas/Device.Endpoint"
          x-field-uid: 1
        ep2:
          description: |-
            An optional device and component that is the other endpoint of the edge
          $ref: "#/components/schemas/Device.Endpoint"
          x-field-uid: 2
        many2many:
          description: |-
            If true every endpoint from ep1 will form an edge with every endpoint from ep2.
            If false endpoints generated from ep1 and ep2 should be of the same length and
            will be assigned together in the order they appear in each list.
          type: boolean
          x-field-uid: 3
        link:
          description: |-
            The name of a link that defines additional characteristics of the edge.
            The name MUST exist in the links array of the containing device.
          type: string
          x-field-uid: 4
